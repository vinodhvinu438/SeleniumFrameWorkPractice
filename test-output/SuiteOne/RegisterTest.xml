<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="VINODHOSTING" failures="0" tests="3" name="RegisterTest" time="107.163" errors="0" timestamp="2022-06-29T12:25:37 IST">
  <testcase classname="tests.RegisterTest" name="@BeforeMethod setup" time="107.067">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created
from disconnected: received Inspector.detached event
  (Session info: chrome=103.0.5060.66)
Build info: version: &amp;apos;4.2.2&amp;apos;, revision: &amp;apos;683ccb65d6&amp;apos;
System info: host: &amp;apos;VINODHOSTING&amp;apos;, ip: &amp;apos;192.168.54.225&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.3.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created
from disconnected: received Inspector.detached event
  (Session info: chrome=103.0.5060.66)
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'VINODHOSTING', ip: '192.168.54.225', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:283)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:184)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:106)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:106)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:93)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at resources.Base.initializeBrowser(Base.java:41)
at tests.RegisterTest.setup(RegisterTest.java:24)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.RegisterTest" name="@AfterMethod tearDown" time="-1.65648573762E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.RegisterTest" name="@BeforeMethod setup" time="-1.656485737625E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.RegisterTest" name="@AfterMethod tearDown" time="-1.656485737632E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.RegisterTest" name="@BeforeMethod setup" time="-1.656485737635E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="tests.RegisterTest" name="@AfterMethod tearDown" time="-1.656485737644E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.RegisterTest" name="registerWithMandatoryFields" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithMandatoryFields -->
  <testcase classname="tests.RegisterTest" name="registerWithAllFields" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithAllFields -->
  <testcase classname="tests.RegisterTest" name="registerWithAlreadyRegisteredEmailAddress" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithAlreadyRegisteredEmailAddress -->
</testsuite> <!-- RegisterTest -->
